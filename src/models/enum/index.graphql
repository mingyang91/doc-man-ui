# 一些全局的元数据

#import '../public.graphql'

# * global_const 全局常量，计算时会用到

fragment GlobalConst on global_const {
  id
  name
  value
  comment
}

query GlobalConstList {
  data: global_const {
    ...GlobalConst
  }
}

mutation CreateGlobalConst(
  $name: String = ""
  $value: numeric = ""
  $comment: String = ""
) {
  insert_global_const_one(
    object: { name: $name, value: $value, comment: $comment }
  ) {
    ...GlobalConst
  }
}

mutation UpdateGlobalConstById(
  $id: uuid = ""
  $name: String = ""
  $value: numeric = ""
  $comment: String = ""
) {
  update_global_const_by_pk(
    pk_columns: { id: $id }
    _set: { name: $name, value: $value, comment: $comment }
  ) {
    ...GlobalConst
  }
}

mutation DeleteGlobalConst($id: uuid = "") {
  delete_global_const_by_pk(id: $id) {
    ...GlobalConst
  }
}

# * equipment_enum 设备种类

fragment EquipmentEnum on equipment_enum {
  id
  name
  displayName
  comment
}

query EquipmentEnumList {
  data: equipment_enum {
    ...EquipmentEnum
  }
}

mutation CreateEquipmentEnum(
  $name: String = ""
  $displayName: String = ""
  $comment: String = ""
) {
  insert_equipment_enum_one(
    object: { name: $name, displayName: $displayName, comment: $comment }
  ) {
    ...EquipmentEnum
  }
}

mutation UpdateEquipmentEnumById(
  $id: uuid = ""
  $name: String = ""
  $displayName: String = ""
  $comment: String = ""
) {
  update_equipment_enum_by_pk(
    pk_columns: { id: $id }
    _set: { name: $name, displayName: $displayName, comment: $comment }
  ) {
    ...EquipmentEnum
  }
}

mutation DeleteEquipmentEnum($id: uuid = "") {
  delete_inspection_item_enum_by_pk(id: $id) {
    id
  }
}

# * inspection_item_enum 检测项。被检测的设备类型不同，检测项也不同

fragment InspectionItemEnumFragment on inspection_item_enum {
  acceptanceRequire
  comment
  equipment_id
  formula
  id
  inputCount
  inputName
  inputUnit
  inspectionCondition
  name
  outputName
  outputUnit
  stateRequire
}

query InspectionItemEnumList {
  data: inspection_item_enum(distinct_on: name) {
    ...InspectionItemEnumFragment
  }
}

mutation CreateInspectionItemEnum(
  $object: inspection_item_enum_insert_input = {}
) {
  insert_inspection_item_enum_one(object: $object) {
    ...InspectionItemEnumFragment
  }
}

mutation UpdateInspectionItemEnumById(
  $id: uuid = ""
  $object: inspection_item_enum_set_input = {}
) {
  update_inspection_item_enum_by_pk(pk_columns: { id: $id }, _set: $object) {
    ...InspectionItemEnumFragment
  }
}

mutation DeleteInspectionItemEnum($id: uuid = "") {
  delete_inspection_report_item_by_pk(id: $id) {
    id
  }
}
