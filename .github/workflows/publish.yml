name: Build and Publish to Github Package

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store
jobs:
  # job to install, build
  cache-and-install:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        node-version: [16]
        pnpm-version: [7.14.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # 1. Install Node.js
      - name: 1. Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 2. Setup pnpm
      - name: 2. Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        id: setup-pnpm
        with:
          version: ${{ matrix.pnpm-version }}
          dest: ${{ env.PNPM_CACHE_FOLDER }}
          run_install: false

      # 3. Setup pnpm cache
      - name: 3. Setup pnpm cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PNPM_CACHE_FOLDER }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-node_modules-
      # 4. Install dependencies
      - name: 4. Install dependencies
        id: install-dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      # # 5. build from source
      # - name: 5. build from source
      #   run: pnpm run build

      # 6. Configure AWS credentials
      - name: 6. Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      # 7. Login to Amazon ECR
      - name: 7. Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 8. Build from source, Login to Amazon ECR
      - name: 8. Build from source
        run: pnpm run build

      - name: 9. Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: 10. Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: 11. Build docker image, push to AWS ECR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./APP-META/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/docman-ui:${{ github.sha }}
